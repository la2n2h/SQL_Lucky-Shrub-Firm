CREATE DATABASE Lucky_Shrub;
USE Lucky_Shrub;
SELECT * FROM Orders;

+---------+----------+-----------+----------+---------+------------+
| OrderID | ClientID | ProductID | Quantity | Cost    | Date       |
+---------+----------+-----------+----------+---------+------------+
|       1 | Cl1      | P1        |       10 |  500.00 | 2020-09-01 |
|       2 | Cl2      | P2        |        5 |  100.00 | 2020-09-05 |
|       3 | Cl3      | P3        |       20 |  800.00 | 2020-09-03 |
|       4 | Cl4      | P4        |       15 |  150.00 | 2020-09-07 |
|       5 | Cl3      | P3        |       10 |  450.00 | 2020-09-08 |
|       6 | Cl2      | P2        |        5 |  800.00 | 2020-09-09 |
|       7 | Cl1      | P4        |       22 | 1200.00 | 2020-09-10 |
|       8 | Cl3      | P1        |       15 |  150.00 | 2020-09-10 |
|       9 | Cl1      | P1        |       10 |  500.00 | 2020-09-12 |
|      10 | Cl2      | P2        |        5 |  100.00 | 2020-09-13 |
|      11 | Cl4      | P5        |        5 |  100.00 | 2020-09-15 |
|      12 | Cl1      | P1        |       10 |  500.00 | 2022-09-01 |
|      13 | Cl2      | P2        |        5 |  100.00 | 2022-09-05 |
|      14 | Cl3      | P3        |       20 |  800.00 | 2022-09-03 |
|      15 | Cl4      | P4        |       15 |  150.00 | 2022-09-07 |
|      16 | Cl3      | P3        |       10 |  450.00 | 2022-09-08 |
|      17 | Cl2      | P2        |        5 |  800.00 | 2022-09-09 |
|      18 | Cl1      | P4        |       22 | 1200.00 | 2022-09-10 |
|      19 | Cl3      | P1        |       15 |  150.00 | 2022-09-10 |
|      20 | Cl1      | P1        |       10 |  500.00 | 2022-09-12 |
|      21 | Cl2      | P2        |        5 |  100.00 | 2022-09-13 |
|      22 | Cl2      | P1        |       10 |  500.00 | 2021-09-01 |
|      23 | Cl2      | P2        |        5 |  100.00 | 2021-09-05 |
|      24 | Cl3      | P3        |       20 |  800.00 | 2021-09-03 |
|      25 | Cl4      | P4        |       15 |  150.00 | 2021-09-07 |
|      26 | Cl1      | P3        |       10 |  450.00 | 2021-09-08 |
|      27 | Cl2      | P1        |       20 | 1000.00 | 2022-09-01 |
|      28 | Cl2      | P2        |       10 |  200.00 | 2022-09-05 |
|      29 | Cl3      | P3        |       20 |  800.00 | 2021-09-03 |
|      30 | Cl1      | P1        |       10 |  500.00 | 2022-09-01 |
+---------+----------+-----------+----------+---------+------------+
30 rows in set (0.02 sec)
-- Create a SQL function that prints the cost value of a specific order based on the user input of the OrderID. The expected output result should be the same as the result in the screenshot below when you call the function with an OrderID of 5.
DELIMITER //
CREATE FUNCTION Findcost(orderid INT) RETURNS DECIMAL(5,2) DETERMINISTIC BEGIN DECLARE order_cost DECIMAL(5,2); 
SELECT Cost INTO order_cost FROM Orders WHERE OrderID = orderid; RETURN order_cost; END //
DELIMITER ;
SELECT Findcost(5);
+-------------+
| Findcost(5) |
+-------------+
|      450.00 |
+-------------+
1 row in set (0.00 sec)

--Create a stored procedure called GetDiscount. This stored procedure must return the final cost of the customer's order after the discount value has been deducted.
DELIMITER //
CREATE PROCEDURE GetDiscount(orderid INT)
  BEGIN 
    DECLARE CostAfterDiscount DECIMAL(7,2); 
    DECLARE CurrentCost DECIMAL(7,2); 
    DECLARE OrderQty INT; 
-- Retrieve both Quantity and Cost in a single Quiery
SELECT Quantity, Cost INTO OrderQty, CurrentCost FROM Orders WHERE OrderID = orderid;
-- handle case when no data is found
IF OrderQty IS NULL OR CurrentCost IS NULL THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Order not found'; ELSE
-- apply discount base on quantity
IF OrderQty >= 20 THEN SET CostAfterDiscount = CurrentCost - (CurrentCost * 0.2);
ELSEIF OrderQty >= 10 THEN SET CostAfterDiscount = CurrentCost - (CurrentCost * 0.1);
ELSE SET CostAfterDiscount = CurrentCost;
END IF;
-- Output the final cost after discount
SELECT CostAfterDiscount;
END //
DELIMITER ;

mysql> CALL GetDiscount(5);
+---------------------+
| cost_after_discount |
+---------------------+
|              405.00 |
+---------------------+
1 row in set (0.00 sec)
